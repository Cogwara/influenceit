# Generated by Django 5.1.5 on 2025-02-04 14:03

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('data', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CampaignMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metric_type', models.CharField(choices=[('total_reach', 'Total Reach'), ('total_impressions', 'Total Impressions'), ('total_engagement', 'Total Engagement'), ('conversion_rate', 'Conversion Rate'), ('cost_per_engagement', 'Cost per Engagement'), ('roi', 'Return on Investment')], max_length=50)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ContentMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metric_type', models.CharField(choices=[('views', 'Views'), ('likes', 'Likes'), ('comments', 'Comments'), ('shares', 'Shares'), ('saves', 'Saves'), ('engagement_rate', 'Engagement Rate')], max_length=50)),
                ('platform_data', models.JSONField(default=dict)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='InfluencerMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metric_type', models.CharField(choices=[('followers', 'Followers'), ('avg_engagement_rate', 'Average Engagement Rate'), ('total_reach', 'Total Reach'), ('content_performance', 'Content Performance'), ('campaign_success_rate', 'Campaign Success Rate')], max_length=50)),
                ('platform', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metric_type', models.CharField(choices=[('engagement_rate', 'Engagement Rate'), ('reach', 'Reach'), ('impressions', 'Impressions'), ('clicks', 'Clicks'), ('conversions', 'Conversions'), ('roi', 'ROI')], max_length=50)),
                ('platform', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
